version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: sentinel-redis
    ports:
      - "6379:6379"
    networks:
      - sentinel-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:16
    container_name: sentinel-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sentinel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sentinel-api
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - sentinel-network
    volumes:
      - ./storage:/app/data
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    environment:
      - PYTHONPATH=/app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=sentinel-postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - STORAGE_ROOT=/app/data
      - DOCUMENT_STORAGE=/app/data/documents
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: sentinel-dashboard
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      - sentinel-network
    volumes:
      - ./storage:/app/data
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    environment:
      - FLASK_APP=interface.dashboard:create_app
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=sentinel-postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - API_BASE_URL=http://sentinel-api:8000
      - STORAGE_ROOT=/app/data
      - DOCUMENT_STORAGE=/app/data/documents
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379

  collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    container_name: sentinel-collector
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - sentinel-network
    volumes:
      - ./storage:/app/data
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    environment:
      - PYTHONPATH=/app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=sentinel-postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - STORAGE_ROOT=/app/data
      - DOCUMENT_STORAGE=/app/data/documents
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379

  processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    container_name: sentinel-processor
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - sentinel-network
    volumes:
      - ./storage:/app/data
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    environment:
      - PYTHONPATH=/app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=sentinel-postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - STORAGE_ROOT=/app/data
      - DOCUMENT_STORAGE=/app/data/documents
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379

  watchdog:
    build:
      context: .
      dockerfile: Dockerfile.watchdog
    container_name: sentinel-watchdog
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - sentinel-network
    volumes:
      - ./storage:/app/data
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    environment:
      - PYTHONPATH=/app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=sentinel-postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - STORAGE_ROOT=/app/data
      - DOCUMENT_STORAGE=/app/data/documents
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379

  playwright:
    image: mcr.microsoft.com/playwright:v1.42.1
    container_name: sentinel-playwright
    networks:
      - sentinel-network

volumes:
  postgres_data:
    name: sentinel_postgres_data

networks:
  sentinel-network:
    name: sentinel_sentinel-network